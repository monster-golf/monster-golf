<?xml version="1.0"?>
<!-- 
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration xmlns="http://schemas.microsoft.com/.NetConfiguration/v2.0">
	<configSections>
		<sectionGroup name="ajaxNet">
			<!--
				If you are using Microsoft .NET 1.1 please remove the two attributes
				requirePermission and restartOnExternalChanges, they are only supported
				with .NET 2.0.
			-->
			<section name="ajaxSettings" type="AjaxPro.AjaxSettingsSectionHandler,AjaxPro.2" requirePermission="false" restartOnExternalChanges="true"/>
		</sectionGroup>
	</configSections>
	<ajaxNet>
		<ajaxSettings>
			<urlNamespaceMappings useAssemblyQualifiedName="false" allowListOnly="false">
				<!--
					Set the attribute useAssemblyQualifiedName to true to enable
					use of assemblies placed in the GAC by using the full assembly
					qualified name.
				
					To hide internal knowledge of assemblies, classes and namespace
					you can override the name of the virtual http endpoints.
					
					<add type="Namespace.Class1,Assembly" path="mypath" />
				-->
			</urlNamespaceMappings>
			<jsonConverters>
				<!--
					This section can be used to add new IJavaScriptConverters to the
					Ajax.NET Professional engine. If you want to disable built-in
					converters you can use the remove tag.
			
					<remove type="Namespace.Class1,Assembly"/>
					<add type="Namespace.Class2,Assembly"/>
					
					<add type="AjaxPro.BitmapConverter,AjaxPro.2" mimeType="image/jpeg" quality="100"/>
				-->
			</jsonConverters>
			<!--
				Set the enabled attribute to true to get Stack, TargetSize and Source 
				information if an exception has been thrown.
			-->
			<debug enabled="false"/>
			<!--
				This is the default configuration used with Ajax.NET Professional. You
				can put there your static JavaScript files, or remove the path attribute
				to completly disable the files.
			-->
			<scriptReplacements>
				<file name="prototype" path="~/ajaxpro/prototype.ashx"/>
				<file name="core" path="~/ajaxpro/core.ashx"/>
				<file name="converter" path="~/ajaxpro/converter.ashx"/>
			</scriptReplacements>
			<!-- <encryption cryptType="" keyType="" /> -->
			<!--
				Set the enabled attribute to true to enable the use of an Ajax.NET Professional
				token. This will send a token to the client that will be used to identify if the
				requests comes from the same PC.
			-->
			<token enabled="true" sitePassword="mtsLLCnd"/>
			<!--
				The oldStyle section can be used to enable old styled JavaScript code or
				functions that are not used any more.
			
				<oldStyle>
					<objectExtendPrototype/>
					<appCodeQualifiedFullName/>
					<allowNumberBooleanAsString/>
					<sessionStateDefaultNone/>
					<includeMsPrototype/>
					<renderDateTimeAsString/>
					<noUtcTime/>
				</oldStyle>
			-->
		</ajaxSettings>
	</ajaxNet>
	<appSettings>
    <add key="mailserver" value="smtpout.secureserver.net"/>
    <add key="mailfrom" value="aaron@aaronwald.net"/>
    <add key="mailpassword" value="One58131"/>
    <add key="mailreplyto" value="aaron@aaronwald.net:Aaron Wald"/>
  </appSettings>
	<connectionStrings>
		<add name="monster" connectionString="Persist Security Info=False;User ID=monstergolf;Password=M0nS+0n@!n;Initial Catalog=monstergolf;Data Source=monstergolf.db.6071781.hostedresource.com;"/>
    <!--<add name="monster" connectionString="Persist Security Info=False;User ID=monstergolf;Password=M0nS+0n@!n;Initial Catalog=monstergolf;Data Source=(local)\DS02;"/>-->
  </connectionStrings>
  <system.web>
		<compilation debug="true">
			<assemblies>
				<add assembly="System.Security, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/>
				<add assembly="System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/>
				<add assembly="System.Configuration.Install, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/></assemblies>
		</compilation>
		<!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
		<customErrors mode="Off"/>
		<authentication mode="Windows"/>
		<!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
	</system.web>
	<location path="ajaxpro">
		<system.web>
			<httpHandlers>
				<add verb="*" path="*.ashx" type="AjaxPro.AjaxHandlerFactory,AjaxPro.2"/>
			</httpHandlers>
			<!--
				If you need to have Ajax.NET Professional methods running on the
				login page you may have to enable your own authorization configuration
				here.
			-->
			<!--
			<authorization>
				<deny users="?"/>
			</authorization>
			-->
		</system.web>
	</location>
</configuration>
